#+TITLE: 进程和线程相关模块   

* subprocess
  提供了创建进程以及与另一个进程通信的接口。适用于获取一个进程的输出或
  向一个进程提供输入。   
  #+BEGIN_SRC python
    subprocess.call('du -hs $HOME', shell=True)

    #丢弃输出
    subprocess.call('ping -c 10.10.10.1',
                    shell=True,
                    stdout=open('/dev/null', 'w'),
                    stderr=subprocess.STDOUT)

    #截获进程的输出
    p = subprocess.call('df -h', shell=True, stderr=subprocess.PIPE)
    out = p.stdout.readlines()
  #+END_SRC
* signal
  Unix的信号机制，向其他进程发送事件。  
* threading
  包含了高级的，面向对象的并行编程接口。
  它的基本对象是Thread对象，I/O紧密型的工作。
  multiprocessing是进程间的并行API，基本对象是Process.  


