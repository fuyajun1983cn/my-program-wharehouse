#+STARTUP: overview
#+TITLE: WiFi案例7 -- 连接老旧AP热点失败
#+STARTUP: hidestars
#+OPTIONS:    H:3 num:nil toc:t \n:nil ::t |:t ^:t -:t f:t *:t tex:t d:(HIDE) tags:not-in-toc
#+HTML_HEAD: <link rel="stylesheet" title="Standard" href="css/worg.css" type="text/css" />


* 问题描述
  连接一台比较旧的AP时，连接失败，被AP拒绝。对比其他平台，可以正常连接。

* 问题分析 

  这个问题看上去应该是AP兼容性问题，需要一份正常连接的Log和失败的Log进
  行对比，以判断问题点。

  1. 首先看AP回的Probe Response的信息

     [[./images/2016/2016051301.png]]

     从图中，可以看到几个信息：
     - 此AP不包含HT Capability，说明是不支持11n的（注：在解决问题前，
       是不清楚AP是很老旧的AP这个信息的。）

     - 第二，就是AP的一些Capability信息。

  2. 其次看下连接失败时，发送给AP的Association Request的包的信息

     [[./images/2016/2016051302.png]]

  3. 其他平台能正常连接到此AP时，发送给AP的Associaiton Request的包的信
     息

     [[./images/2016/2016051303.png]]


  通过对比，可以发现有如下两个疑点：
  1. Association Request中的immediate Bloack Ack Allowed这个位没有设置。
  2. 在发送给AP的Association Request中的信息中包含有Extended
     Capabilities信息。

* 解决方法
  针对上述两个疑点，发现连接不上的主要原因是在Association Request中携
  带了Extended Capabilities IE信息。针对这种情况， =wpa_supplicant= 已
  经有了一个修改的思路：

  #+BEGIN_SRC c
    /*
     ,* Workaround: Add Extended Capabilities element only if the AP
     ,* included this element in Beacon/Probe Response frames. Some older
     ,* APs seem to have interoperability issues if this element is
     ,* included, so while the standard may require us to include the
     ,* element in all cases, it is justifiable to skip it to avoid
     ,* interoperability issues.
     ,*/
    if (!bss || wpa_bss_get_ie(bss, WLAN_EID_EXT_CAPAB)) {
            u8 ext_capab[18];
            int ext_capab_len;
            ext_capab_len = wpas_build_ext_capab(wpa_s, ext_capab,
                                                 sizeof(ext_capab));
            if (ext_capab_len > 0) {
                    u8 *pos = wpa_ie;
                    if (wpa_ie_len > 0 && pos[0] == WLAN_EID_RSN)
                            pos += 2 + pos[1];
                    os_memmove(pos + ext_capab_len, pos,
                               wpa_ie_len - (pos - wpa_ie));
                    wpa_ie_len += ext_capab_len;
                    os_memcpy(pos, ext_capab, ext_capab_len);
            }
    }      
  #+END_SRC
  
