#+TITLE: Get Things Done
#+STARTUP: overveiw
#+STARTUP: hidestars align fold nodlcheck oddeven lognotestate
#+STARTUP: logdone
#+PROPERTY: Effort_ALL  0:10 0:20 0:30 1:00 2:00 4:00 6:00 8:00
#+COLUMNS: %38ITEM(Details) %TAGS(Context) %7TODO(To Do) %5Effort(Time){:} %6CLOCKSUM{Total}
#+PROPERTY: Effort_ALL 0 0:10 0:20 0:30 1:00 2:00 3:00 4:00 8:00
#+TAGS:       Study(s) Project(p) Fix(f) Check(c) 

* Tasks
  :PROPERTIES:
  :CATEGORY: TASKS
  :END:
** WiFI Driver持续学习(mt76x2)
    SCHEDULED: <2016-08-29 周一 +1w>
*** Green AP
    - Next Action: 
      LinuxDriver Green AP - RLT MAC
      MT7603_GreenAP_Unify_MAC

*** TPUT_study
*** WoW
    - Next Action:
      WoW_MTxxxx_Intro_20141125

*** Smart Connection
    - Next Action:
      MT7687 - Smart Connection Introduction .pptx

*** USB
    - Next Action:
      usb_study_report_junqi_2_USB Driver Register.pdf

** mt7668驱动学习
    SCHEDULED: <2016-08-29 周一 +1w>
    
*** ☛ TODO [#B] DBDC

*** ☛ TODO [#C] CR4 and PDMA

*** ☛ TODO [#C] HIF

*** ☛ TODO [#C] Security
*** ☛ TODO [#B] cfg80211
*** ☛ TODO [#C] Low power and WOW

*** ☛ TODO [#C] BF/MU/RA/Calibration
    
*** ☛ TODO [#B] FW

*** ☛ TODO [#C] Roaming

** 阅读FreeMind代码，理清大体框架
** 802.11ac
   http://chimera.labs.oreilly.com/books/1234000001739/index.html
   
*** MAC层

*** 11ac中的BF
*** ☛ TODO 物理层                                                         :802.11ac学习:
** emacs
*** 工作流优化
**** ☛ TODO 任务开始时，自动计时
     参考代码：
     #+BEGIN_SRC emacs-lisp
        (setq org-log-done 'time)
          (defadvice org-clock-in (after wicked activate)
       "Mark STARTED when clocked in"
       (save-excursion
         (catch 'exit
           (org-back-to-heading t)
           (if (looking-at org-outline-regexp) (goto-char (1- (match-end 0))))
           (if (looking-at (concat " +" org-todo-regexp "\\( +\\|[ \t]*$\\)"))
               (org-todo "STARTED")))))     
     #+END_SRC
**** ☛ TODO 绽放时，显示等号的字体要同比例进行绽放
** 技术修炼
    SCHEDULED: <2016-08-29 周一 +1w>
*** 读书计划
**** Learn More Study Less
**** 突破思维的障碍
**** 专注力
**** 一万小时天才理论
**** 成功者的大脑
**** Break-Throuhgh Rapid Reading
**** 提早六小时下班的高效工作术
*** 技术书箱
**** Digital Communication Systems
     http://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-02-introduction-to-eecs-ii-digital-communication-systems-fall-2012/index.htm
**** 编译原理（龙书）
** 编程语言捂热计划
*** 网络编程
*** C++
**** ☛ TODO 阅读C++ Concurrency in Action
**** 阅读C++编程的55个好习惯
**** cpluff
**** Google Fruit库研究
      https://github.com/google/fruit.git
*** Java
**** Guice库研究
      https://github.com/google/guice.git
**** Freemind工具研究
***** ☛ TODO 在Tab页中添加支持双击关闭的功能
*** Android
**** Android Adventures - Mastering Fragments
     http://www.i-programmer.info/ebooks/android-adventures-mastering-fragments.html
**** Android
     http://www.i-programmer.info/programming/android.html
*** Javascript
**** 学习"Javascript Data Structures - Stacks, Queue and Deque"
     http://www.i-programmer.info/programming/javascript/1674-javascript-data-structures-stacks-queues-and-deques.html
*** Python
**** 学习Python基本的网络编程方法
**** https://automatetheboringstuff.com/
** 个人开发需求
*** Wifi Debug Program                                               :PROJECT:
**** 当前Action： 搭建应用程序的基本UI界面
**** WiFi
***** ☛ TODO 显示AP列表
***** ☛ TODO 连接AP
**** P2P
***** ☛ TODO 支持WiFi直连
**** Miracast
***** ☛ TODO 支持设备投屏操作
** 开源工具
   1. simple screen recoder
   2. Dia
   3. Childsplay
** ☛ TODO WireShark学习目标
*** Wireshark分析数据包 [0/9]
    - [ ] TCP/IP数据包
    - [ ] DNS
    - [ ] DHCP
    - [ ] WLAN 802.11
    - [ ] Chapter 29
    - [ ] Chapter 30
    - [ ] Chapter 31
    - [ ] Chapter 32
    - [ ] Chapter 33 (command tools)
** ⚑ WAITING CWTS学习                                                 :Study:
CWTS学习， 内容属性简单级别
Added: [2016-08-10 周三 13:40]
** ⚑ WAITING CWSP学习                                                 :Study:
    SCHEDULED: <2016-09-19 周一>
808.11 Security相关的知识学习
Added: [2016-08-10 周三 13:40]
** ☛ TODO  吞吐量问题分析SOP学习                                  :Study:
    SCHEDULED: <2016-10-10 周一>
TPUT_study
Added: [2016-08-10 周三 13:45]
** ☛ TODO [#C] 整理以前的学习笔记 [4/8]
   SCHEDULED: <2016-08-29 周一 +1w>
   CLOCK: [2016-08-16 周二 11:35]--[2016-08-16 周二 11:50] =>  0:15
   CLOCK: [2016-08-16 周二 11:05]--[2016-08-16 周二 11:31] =>  0:26
   CLOCK: [2016-08-13 六 15:11]--[2016-08-13 六 15:22] =>  0:11
   :PROPERTIES:
   :Effort:   8:00
   :END:
   - [ ] Android研究文章整理
   - [X] Android学习笔记
   - [X] Android研究记录
   - [ ] CMake笔记
   - [X] C++学习笔记
   - [ ] Java编程笔记
   - [ ] Unix下C编程学习笔记
   - [X] 内核编程笔记
** ☛ TODO [#C] 处理云笔记                                             :Study:
    SCHEDULED: <2016-08-29 周一 +1w>
    CLOCK: [2016-08-18 周四 18:02]--[2016-08-18 周四 18:23] =>  0:21
    CLOCK: [2016-08-18 周四 09:12]--[2016-08-18 周四 09:19] =>  0:07
    CLOCK: [2016-08-17 周三 19:25]--[2016-08-17 周三 19:40] =>  0:15

    Added: [2016-08-15 周一 13:15]

** ☛ TODO 深入理解Android：Wi-Fi、NFC和GPS卷阅读计划                   :Study:
    SCHEDULED: <2016-10-10 周一>
     1. [ ] 第二章  深入理解Netd
     2. [ ] 第三章  WiFi基础知识
     3. [ ] 第四章 深入理解wpa_supplicant
     4. [ ] 第五章 深入理解WifiService
     5. [ ] 第6章 深入理解Wi-Fi Simple Configuration
     6. [ ] 第7章 深入理解Wi-Fi P2P
Added: [2016-09-02 周五 14:15]
** ☛ TODO 健身计划                                                    :Check:
    SCHEDULED: <2016-10-11 二 +1w>
    - State "✔ DONE"     from "☛ TODO"     [2016-09-18 周日 00:00]
   - State "✔ DONE"     from "☛ TODO"     [2016-09-10 六 13:35]
   :PROPERTIES:
   :LAST_REPEAT: [2016-09-18 周日 00:02]
   :END:
    - 每周至少两次健身
Added: [2016-09-05 周一 19:25]
** ☛ TODO Linux IPC机制研究                                            :Study:
    1. [[https://lwn.net/Articles/466304/][Fast interprocess communication revisited]]
    2. [[https://lwn.net/Articles/697191/][Bus1: a new Linux interprocess communication proposal]]
Added: [2016-09-07 周三 09:50]
** ☛ TODO Linux Trace API研究                                          :Study:
    
Added: [2016-09-09 周五 13:45]
** ☛ TODO [#B] 研究wpa_supplicant上的修改记录                         :Study:
    SCHEDULED: <2016-10-31 周一 +1w>
    - State "✔ DONE"     from "☛ TODO"     [2016-10-26 周三 20:05]
   - State "✔ DONE"     from "☛ TODO"     [2016-10-18 二 16:30]
   - State "✔ DONE"     from "☛ TODO"     [2016-09-28 三 16:25]
   - State "✔ DONE"     from "☛ TODO"     [2016-09-21 三 13:40]
    - State "✔ DONE"     from "☛ TODO"     [2016-09-14 周三 17:05]
    - State "✔ DONE"     from "☛ TODO"     [2016-09-09 周五 17:45]
    CLOCK: [2016-09-09 周五 17:08]--[2016-09-09 周五 17:43] =>  0:35
    - State "✔ DONE"     from "☛ TODO"     [2016-08-31 周三 11:50]
    CLOCK: [2016-08-31 周三 09:45]--[2016-08-31 周三 11:50] =>  2:05
    CLOCK: [2016-08-30 周二 19:01]--[2016-08-30 周二 20:03] =>  1:02
    CLOCK: [2016-08-30 周二 17:47]--[2016-08-30 周二 18:08] =>  0:21
    - State "✔ DONE"     from "☛ TODO"     [2016-08-25 周四 17:35]
    CLOCK: [2016-08-25 周四 16:50]--[2016-08-25 周四 17:34] =>  0:44
    CLOCK: [2016-08-15 周一 17:25]--[2016-08-15 周一 18:07] =>  0:42
   :PROPERTIES:
   :Effort:   8:00
   :LAST_REPEAT: [2016-10-26 周三 20:07]
   :END:
     - 2015-October
     - Next Action: Auguest2009
** ☛ TODO SDIO规范阅读                                                 :Study:

Added: [2016-09-18 周日 00:15]
** ☛ TODO [#A] 办公桌6S整理                                           :Check:
    SCHEDULED: <2016-11-07 周一 +2w>
    - State "✔ DONE"     from "☛ TODO"     [2016-11-03 周四 16:20]
   - State "✔ DONE"     from "☛ TODO"     [2016-10-12 三 10:40]
   - State "✔ DONE"     from "☛ TODO"     [2016-09-27 二 09:25]
   - State "✔ DONE"     from "☛ TODO"     [2016-09-19 一 18:45]
    - State "✔ DONE"     from "☛ TODO"     [2016-09-12 周一 09:30]
    - State "✔ DONE"     from "☛ TODO"     [2016-09-05 周一 09:55]
   :PROPERTIES:
   :LAST_REPEAT: [2016-11-03 周四 16:18]
   :END:
    - 整理
      内容： 将工作现场的所有物品区分为有用品和无用品，除了有用的留下
      来，其它的都清理掉。

      目的：腾出空间，空间活用，防止误用，保持清爽的工作环境。

    - 整顿
      内容：把留下来的必要用的物品依规定位置摆放，并放置整齐加以标识。

      目的：工作场所一目了然，消除寻找物品的时间，整整齐齐的工作环境，
      消除过多的积压物品。

    - 清扫
      内容：将工作场所内看得见与看不见的地方清扫干净，保持工作场所干净、
      亮丽，创造良好的工作环境。 */

      目的： 稳定品质，减少工业伤害。

    - 清洁
      内容：将整理、整顿、清扫进行到底，并且制度化，经常保持环境处在整
      洁美观的状态。

      目的：创造明朗现场，维持上述3S推行成果。

    - 素养
      内容：每位成员养成良好的习惯，并遵守规则做事，培养积极主动的精神
      （也称习惯性）。

      目的： 促进良好行为习惯的形成，培养遵守规则的员工，发扬团队精神。

    - 安全
      内容：重视成员安全教育，每时每刻都有安全第一观念，防范于未然。

      目的： 建立及维护安全生产的环境，所有的工作应建立在安全的前提下。 
Added: [2016-09-05 周一 09:50]
** ☛ TODO 学习elisp tutorial
    DEADLINE: <2016-11-30 三> SCHEDULED: <2016-10-10 一>
** ☛ TODO 802.1X深入研究
     EAPOL 一些状态机的研究
** ☛ TODO [#B] CWAP学习                                                :Study:
   DEADLINE: <2016-11-30 周三> SCHEDULED: <2016-10-17 一 +1w>
    - State "✔ DONE"    q from "☛ TODO"     [2016-09-18 周日 00:05]
    CLOCK: [2016-09-12 周一 19:09]--[2016-09-12 周一 20:15] =>  1:06
    - State "✔ DONE"     from "☛ TODO"     [2016-09-09 周五 09:25]
    - State "✔ DONE"     from "☛ TODO"     [2016-09-06 周二 20:40]
    CLOCK: [2016-09-01 周四 16:56]--[2016-09-01 周四 18:02] =>  1:06
    CLOCK: [2016-09-01 周四 16:04]--[2016-09-01 周四 16:25] =>  0:21
   :PROPERTIES:
   :LAST_REPEAT: [2016-09-18 周日 00:06]
   :END:
内容属性较难级别
     - [X] 第一章
     - [X] 第二章
     - [X] 第三章
     - [X] 第四章
     - [X] 第五章
     - [X] 第六章
     - [X] 第七章
     - [ ] 第八章
     - [ ] 第九章
     - [ ] 第十章
     - [ ] 第十一章
     - [ ] 第十二章

** ☛ TODO 学习mt76x2 WiKi上的案例分享信息
   SCHEDULED: <2016-10-17 一 +1w>
** ☛ TODO [#B] 数据结构与算法设计学习                                 :Study:
    SCHEDULED: <2016-09-19 周一 +1w>
    - State "✔ DONE"     from "☛ TODO"     [2016-09-18 周日 00:20]
   - State "✔ DONE"     from "☛ TODO"     [2016-09-10 六 16:10]
    CLOCK: [2016-09-10 六 14:31]--[2016-09-10 六 16:11] =>  1:40
    - State "✔ DONE"     from "☛ TODO"     [2016-09-04 周日 22:50]
    CLOCK: [2016-08-13 六 15:24]--[2016-08-13 六 16:04] =>  0:40
   :PROPERTIES:
   :Effort:   8:00
   :LAST_REPEAT: [2016-09-18 周日 00:20]
   :END:
    数据结构与常见算法思想学习
*** 编程珠矶
*** 算法设计手册
*** 数据 结构与习题与解答——Java语言描述
**** 第八章 —— 线性表
**** 第九章 —— 树
**** 第十章 —— 二叉树
**** 第十一章 —— 搜索树
**** 第十二章 —— 堆和优先队列
**** 第十三章 —— 排序
**** 第十四章 —— 表
**** 第十五章 —— 集合
**** 第十六章 —— 图
Added: [2016-08-11 周四 13:25]

** ☛ TODO mac80211学习
    DEADLINE: <2016-12-31 周六> SCHEDULED: <2016-11-01 周二>
** ⚑ WAITING MT7668内存管理研究                                       :Study:
      研究内存池的管理
Added: [2016-11-04 周五 16:40]
** ⚑ WAITING cfg80211 bss列表 的管理
      struct cfg80211_registered_device下面的bss_list代表当前网络接口
      保存的扫描结果列表 。
      bss_generation代数
      
** ⚑ WAITING USB规范阅读                                              :Study:
    - [ ] Architectural Overview  
      本月内完成
    - [ ] 第4章
    - [ ] 第9章
    - [ ] 第十章
** ☛ TODO Linux devicetree mechanism
     A devicetree essentially describes a specific device.This
     devicetree (encoded as a binary "dtb" file) can be  stored in ROM
     on the system, or can be loaded from wherever the kernel is
     loaded. The  theory is that when a system (e.g. motherboard) is
     created, a "dtb" can be created for it, and it  will work with
     all future software releases. It is a nice theory... 
*** board file
        描述主板信息的C文件。
        类似如下：
        #+BEGIN_SRC c
          MACHINE_START(GTA04, "GTA04")
                  /* Maintainer: Nikolaus Schaller - http://www.gta04.org */
                  .atag_offset    =   0x100,
                  .reserve        =   omap_reserve,
                  .map_io         =   omap3_map_io,
                  .init_irq       =   omap3_init_irq,
                  .handle_irq     =   omap3_intc_handle_irq,
                  .init_early     =   omap3_init_early,
                  .init_machine   =   gta04_init,
                  .init_late      =   omap3630_init_late,
                  .timer          =   &omap3_secure_timer,
                  .restart        =   omap_prcm_restart,
              MACHINE_END        
        #+END_SRC

        其中，gta04_init是平台相关的代码，它通常使用
        platform_add_devices()
        
        所以，这个主板文件定义了跟主板相关的一切信息，识别了所有其他组
        件的标识，其中SoC与组件之间的Glue代码。
*** devicetree
        devicetree的源码文件包含了两种信息： SoC identification ，
        component configuration
        但是不包含SoC与组件之间的Glue代码。这些代码应该是比较通用的代
        码，具体平台不应该包含这些代码。

        源文件一般以.dts结尾，.dtsi一般被包含进.dts文件中。

        示例：
        #+BEGIN_SRC sh
          charger: bci {
                  compatible = "ti,twl4030-bci";
                  interrupts = <9>, <2>;
                  bci3v1-supply = <&vusb3v1>;
              };        
        #+END_SRC

        上述片断描述了电池充电器设备。
        charger是一个字符标签，使得该结点可在其他处被引用。bci是该结点
        位于其父结点下的名字。完整名称实际上：
        /ocp/i2c@48070000/twl@48/bci

        compatible告知Linux该设备是干什么的。Every device can list one
        or more strings that it is "compatible" with. Similarly every
        driver in the kernel can list one or more strings that it is
        compatible with (via the  "driver.of_match_table" field).

        interrupts列出了两个中断号，表示BCI可以产生两个中断。

        一般需要配置的设备是一些固定的设备，不能自动枚举的设备。
        
* Calendar
  :PROPERTIES:
  :CATEGORY: CALENDAR
  :END:
* Financial
  :PROPERTIES:
  :CATEGORY: FINANCIAL
  :END:
** ☛ TODO 招商银行信用卡还款提醒
    SCHEDULED: <2016-12-27 周二 +1m>
    - State "✔ DONE"     from "☛ TODO"     [2016-11-28 周一 09:35]
    - State "✔ DONE"     from "☛ TODO"     [2016-10-31 周一 09:50]
   - State "✔ DONE"     from "☛ TODO"     [2016-09-27 二 14:35]
    - State "✔ DONE"     from "☛ TODO"     [2016-08-26 周五 19:25]
    - State "✔ DONE"     from ""           [2016-08-25 周四 13:35]
   :PROPERTIES:
   :LAST_REPEAT: [2016-11-28 周一 09:37]
   :END:

** ☛ TODO 浦发银行信用卡还款提醒
    SCHEDULED: <2016-12-30 周五 +1m>
    - State "✔ DONE"     from "☛ TODO"     [2016-11-28 周一 09:40]
    - State "✔ DONE"     from "☛ TODO"     [2016-10-31 周一 09:50]
   - State "✔ DONE"     from "☛ TODO"     [2016-09-28 三 16:30]
    - State "✔ DONE"     from "☛ TODO"     [2016-08-26 周五 19:25]
    - State "✔ DONE"     from "☛ TODO"     [2016-08-25 周四 13:40]
   :PROPERTIES:
   :LAST_REPEAT: [2016-11-28 周一 09:38]
   :END:

** ☛ TODO 广发银行信用卡还款提醒
    SCHEDULED: <2017-01-03 周二 +1m>
    - State "✔ DONE"     from "☛ TODO"     [2016-11-28 周一 09:40]
    - State "✔ DONE"     from "☛ TODO"     [2016-10-31 周一 09:50]
   - State "✔ DONE"     from "☛ TODO"     [2016-09-28 三 16:30]
    - State "✔ DONE"     from "☛ TODO"     [2016-08-26 周五 19:25]
    - State "✔ DONE"     from "☛ TODO"     [2016-08-25 周四 13:40]
   :PROPERTIES:
   :LAST_REPEAT: [2016-11-28 周一 09:38]
   :END:

** ☛ TODO 还贷提醒
    SCHEDULED: <2016-12-29 周四 +1m +2d>
    - State "✔ DONE"     from "☛ TODO"     [2016-11-28 周一 09:40]
    - State "✔ DONE"     from "☛ TODO"     [2016-10-31 周一 09:50]
   - State "✔ DONE"     from "☛ TODO"     [2016-09-28 三 16:30]
    - State "✔ DONE"     from "☛ TODO"     [2016-08-26 周五 19:25]
    - State "✔ DONE"     from "☛ TODO"     [2016-08-25 周四 13:40]
   :PROPERTIES:
   :LAST_REPEAT: [2016-11-28 周一 09:38]
   :END:

* 本月必须启动的任务
** ☛ TODO The Art of Learning
   SCHEDULED: <2016-08-27 周六>
** ☛ TODO 阅读数据通信与网络                                          :Study:
   DEADLINE: <2016-12-31 六> SCHEDULED: <2016-10-17 一>
    CLOCK: [2016-09-06 周二 09:32]--[2016-09-06 周二 10:10] =>  0:38
    CLOCK: [2016-08-31 周三 17:20]--[2016-08-31 周三 18:06] =>  0:46
    - 第二部分 物理层
      下次读第五章
    - 第三部分 数据链路层
Added: [2016-08-31 周三 17:20]
** ☛ TODO 计算机语言的构造与解释
   SCHEDULED: <2016-08-27 周六>
** ☛ TODO [#C] IW源码学习                                             :Study:
    SCHEDULED: <2016-09-19 周一>
   - Action: 熟悉iw命令的使用
** ☛ TODO [#C] TCP-IP.Architecture.Design.and.Implementation.in.Linux.2008
    SCHEDULED: <2016-08-19 周五>
    CLOCK: [2016-08-16 周二 19:06]--[2016-08-16 周二 20:06] =>  1:00
    - [X] 第一章
    - [X] Netlink
** SDIO规范阅读
    - [ ] SDIO识卡流程
      驱动流程已经理清，下一步就是对照Spec跟读一下代码流程。

* 本月已完成目标
** W45
    - [X] 准备Scan模块分享PPT
    - [X] 完成CWAP第六章的学习
    - [X] 完成如下资料学习
          http://lists.infradead.org/pipermail/hostap/2015-October/034018.html
    - [X] 完成如下资料学习
      晶元制程
** W46
    - [X] 完成第八章线性表的练习
    - [X] 完成USB规范第三章的学习
    - [X] 完成CWAP第七章的学习
** W47
    - [ ] 了解下SDIO识卡流程
    - [ ] 阅读完 Understanding SD, SDIO and MMC Interface 文档
    - [ ] 了解下SDIO Low Power
** W48
    - [ ] 了解下SDIO识卡流程
      代码流程已经理清，下一步要对着Spec再看一下。
    - [ ] 阅读完 Understanding SD, SDIO and MMC Interface 文档
    - [ ] 了解下SDIO Low Power
** W49
     - [X] 了解下SDIO识卡流程
      代码流程已经理清，下一步要对着Spec再看一下。
     - [X] 阅读完 Understanding SD, SDIO and MMC Interface 文档
     - [ ] 了解一个7662/7668 PM的功能
     - [X] 完成CWAP第八章的学习

* 今天必须做的事情
  :PROPERTIES:
  :CATEGORY: 重要且紧急（计划内）
  :END:
  1. USB规范第三章学习
  2. MT7668 P2P/TDLS学习
  3. 开始第八章练习的学习
  4. 准备cfg80211的报告
  5. SDIO规范阅读

** ☛ TODO Power Management
   - Next Action:
     Linux MT7603 STA Legacy_PSP and Fast_PSP Driver Control Flow
     V0.3
     PS Retrieve_MT7603E

* 今天应该做的事情
  :PROPERTIES:
  :CATEGORY: 重要不紧急(计划内）)
  :END:
** ☛ TODO 编程每日一练                                                :Study:
   SCHEDULED: <2016-09-30 五 +1d>
   - State "✔ DONE"     from "☛ TODO"     [2016-09-22 四 10:00]
   - State "✔ DONE"     from "☛ TODO"     [2016-09-20 二 20:45]
   - State "✔ DONE"     from "☛ TODO"     [2016-09-20 二 11:20]
    - State "✔ DONE"     from "☛ TODO"     [2016-09-18 周日 08:45]
    - State "✔ DONE"     from "☛ TODO"     [2016-09-17 周六 18:00]
    - State "✔ DONE"     from "☛ TODO"     [2016-09-14 周三 13:20]
   :PROPERTIES:
   :LAST_REPEAT: [2016-09-22 四 10:01]
   :END:      
*** glib编程
**** dbus-glib
*** C++标准模板库学习
** ☛ TODO 英语每日一练                                                :Study:
   SCHEDULED: <2016-09-28 三 +1d>
   - State "✔ DONE"     from "☛ TODO"     [2016-09-27 二 17:35]
     -背单词──10分钟分钟
     - 阅读双语新闻一篇──[[http://www.fortunechina.com/index.htm][财富中国]]
   - State "✔ DONE"     from "☛ TODO"     [2016-09-21 三 09:20]
   - State "✔ DONE"     from "☛ TODO"     [2016-09-20 二 20:45]
   - State "✔ DONE"     from "☛ TODO"     [2016-09-19 一 21:55]
   :PROPERTIES:
   :LAST_REPEAT: [2016-09-27 二 17:35]
   :END:
   
Added: [2016-09-19 一 19:00]
** ☛ TODO PPT每日一练                                                 :Study:
    
Added: [2016-10-27 周四 19:00]
* 今天可以做的事情
  :PROPERTIES:
  :CATEGORY: 紧急不重要(计划外))
  :END:
* STAR
** Situation
** Task
** Action
** Result
